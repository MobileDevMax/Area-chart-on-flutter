import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Area Chart',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Area Chart'),
        ),
        body: Center(
          child: AreaChart(),
        ),
      ),
    );
  }
}

class AreaChart extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return CustomPaint(
      size: Size(300, 200),
      painter: AreaChartPainter(),
    );
  }
}

class AreaChartPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final Paint paint1 = Paint()
      ..color = Colors.blue.withOpacity(0.5)
      ..style = PaintingStyle.fill;

    final Paint paint2 = Paint()
      ..color = Colors.red.withOpacity(0.5)
      ..style = PaintingStyle.fill;

    // Defining points for the first area
    final Path path1 = Path();
    path1.moveTo(0, size.height);
    path1.lineTo(size.width * 0.2, size.height * 0.6);
    path1.lineTo(size.width * 0.4, size.height * 0.4);
    path1.lineTo(size.width * 0.6, size.height * 0.7);
    path1.lineTo(size.width * 0.8, size.height * 0.5);
    path1.lineTo(size.width, size.height);
    path1.close();

    // Defining points for the second region
    final Path path2 = Path();
    path2.moveTo(0, size.height);
    path2.lineTo(size.width * 0.2, size.height * 0.8);
    path2.lineTo(size.width * 0.4, size.height * 0.5);
    path2.lineTo(size.width * 0.6, size.height * 0.3);
    path2.lineTo(size.width * 0.8, size.height * 0.6);
    path2.lineTo(size.width, size.height);
    path2.close();

    // Drawing areas
    canvas.drawPath(path1, paint1);
    canvas.drawPath(path2, paint2);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return false;
  }
}
